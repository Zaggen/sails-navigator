// Generated by CoffeeScript 1.9.3
(function() {
  (function() {
    var VERBS, _, _makeCustomRoute, _makeRestfulRoutes, _makeRoute, navigator;
    _ = require('lodash');
    navigator = function(fn) {
      var routes;
      if (fn != null) {
        navigator._routes = {};
        fn(_makeRoute) || {};
        routes = navigator._routes;
        navigator._routes = null;
        return routes;
      } else {
        throw new Error('You must pass a function as argument');
      }
    };
    navigator.config = function(options) {};
    _makeRoute = function(route) {
      var currentRoutes;
      currentRoutes = {};
      _makeRestfulRoutes(route, currentRoutes);
      _.extend(navigator._routes, currentRoutes);
      _makeRoute._currentRoot = route;
      return _makeRoute;
    };
    VERBS = ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'];
    _.each(VERBS, function(VERB) {
      return _makeRoute[VERB] = function(pathObj) {
        return _makeCustomRoute.call(_makeRoute, VERB, pathObj);
      };
    });
    _makeRoute.GET_and_POST = function(pathObj) {
      this.GET(pathObj);
      return this.POST(pathObj);
    };
    _makeRoute.ALL = function(pathObj) {
      return _.each(VERBS, function(VERB) {
        return _makeRoute[VERB](pathObj);
      });
    };
    _makeCustomRoute = function(VERB, pathObj) {
      var action, controllerName, path, route;
      for (path in pathObj) {
        action = pathObj[path];
        route = this._currentRoot;
        controllerName = (_.capitalize(route.substr(1))) + "Controller";
        route += path;
        navigator._routes[VERB + " " + route] = controllerName + "." + action;
      }
      return _makeRoute;
    };
    _makeRestfulRoutes = function(route, routeObj) {
      var controllerName;
      controllerName = (_.capitalize(route.substr(1))) + "Controller";
      routeObj["GET " + route] = controllerName + ".index";
      routeObj["GET " + route + "/new"] = controllerName + ".new";
      routeObj["POST " + route] = controllerName + ".create";
      routeObj["GET " + route + "/edit/:id"] = controllerName + ".edit";
      routeObj["PUT " + route + "/:id"] = controllerName + ".update";
      return routeObj["DELETE " + route + "/:id"] = controllerName + ".destroy";
    };

    /*route.POST = ->
    route.DELETE = ->
    route.PUT = ->
    route.GET_and_POST = ->
    route.ALL = ->
    route.controller = ->
    route.translateRoute = ->
    route.localizeRoute = ->
    route.restFulRoutes = ->
    route.RESTfulRoutes = ->
    route.REST = ->
    route.translateNameSpace = ->
    route.path = ->
    routeToRecordFormat= ->
     */
    return module.exports = navigator;
  })();

}).call(this);

//# sourceMappingURL=index.js.map
